plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'                                    // 추가
    id 'com.diffplug.spotless' version '6.23.3'      // 추가
}

group = 'SITE.RECIPICK'
version = '0.0.1-SNAPSHOT'
description = 'DSA-PROJECT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
}
// ============ Google Java Style Guide 설정 ============

// Checkstyle 설정
checkstyle {
    toolVersion = '10.12.4'
    configFile = file("${rootDir}/google_checks.xml")
    ignoreFailures = false
    maxWarnings = 0
}

// Spotless 설정 (자동 포맷팅)
spotless {
    java {
        target 'src/main/java/**/*.java', 'src/test/java/**/*.java'
        googleJavaFormat('1.17.0').aosp()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()

        // Import 순서 정리
        importOrder('java', 'javax', 'jakarta', 'org.springframework', 'org', 'com', '')

        // 라이센스 헤더 (선택사항)
        // licenseHeader '/* Licensed under Apache-2.0 */'
    }

    // Gradle 파일도 포맷팅
    groovyGradle {
        target '*.gradle'
        greclipse()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


// 프론트엔드 파일을 백엔드 static 폴더로 복사하는 Task
// FRONTEND 폴더의 모든 파일(index.html, css/, js/, images/, pages/)을
// src/main/resources/static/ 폴더로 복사하여 Spring Boot가 정적 파일로 서빙할 수 있게 함
task copyFrontend(type: Copy) {
    from '../../FRONTEND'
    into 'src/main/resources/static'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
// 빌드 과정에서 리소스 처리 전에 프론트엔드 파일 복사 실행
// 이 설정으로  ./gradlew build 시 JAR 파일에 프론트엔드 파일이 포함됨
processResources.dependsOn copyFrontend
// 개발 서버 실행 전에 프론트엔드 파일 복사 실행  
// 이 설정으로  ./gradlew bootRun 시 최신 프론트엔드 파일이 자동 반영됨
bootRun.dependsOn copyFrontend
//서버 실행시  ./gradlew bootRun 으로 실행 필요